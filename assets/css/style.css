/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

* {
  box-sizing: border-box;
}

::-moz-selection {
  background: rgba(120, 197, 129, 0.6);
}

::selection {
  background: rgba(120, 197, 129, 0.6);
}

:root {
  font-size: 18px;
}

body {
  font-family: 'Ubuntu', sans-serif;
  font-size: 18px;
  font-weight: 300;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: 'Ubuntu', sans-serif;
  font-weight: 400;
  color: #3f3d4e;
  margin: 0 0 0.4em 0;
}

h1 {
  font-size: 2rem;
}

h2 {
  font-size: 1.6rem;
}

h3 {
  font-size: 1.2rem;
}

h4 {
  font-size: 1rem;
}

h5 {
  font-size: 0.8rem;
}

h6 {
  font-size: 0.8rem;
}

p, a, button, label, input, textarea, span {
  font-family: 'Ubuntu', sans-serif;
  font-size: 0.8rem;
  font-weight: 300;
  line-height: 1.6;
  color: #625f79;
  margin: 0;
}

a {
  text-decoration: none;
  -webkit-transition: color 150ms ease-in-out;
  transition: color 150ms ease-in-out;
}

a:hover {
  color: #cccccc;
}

label {
  font-size: 1.2rem;
  color: #3f3d4e;
}

@media screen and (min-width: 800px) {
  h1 {
    font-size: 3rem;
  }
  h2 {
    font-size: 2.6rem;
  }
  h3 {
    font-size: 2.2rem;
  }
  h4 {
    font-size: 1.8rem;
  }
  h5 {
    font-size: 1.4rem;
  }
  h6 {
    font-size: 1rem;
  }
  p, a, button, label, input, textarea, span {
    font-size: 1rem;
  }
}

.btn {
  display: inline-block;
  padding: 0.5em 2.6em;
  margin-bottom: 0;
  background-color: #78c581;
  color: #ffffff;
  font-size: 1rem;
  font-weight: 300;
  line-height: 1.4;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  -ms-touch-action: manipulation;
  touch-action: manipulation;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  border: none;
  border-radius: 10em;
  outline: none;
  text-decoration: none;
  -webkit-transition: background-color 150ms ease-in-out, color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out, color 150ms ease-in-out;
}

.btn:hover {
  background-color: #41964b;
  color: #ffffff;
}

.btn:focus {
  outline: none;
}

.btn-secondary {
  background-color: rgba(164, 161, 182, 0.4);
}

.btn-secondary:hover {
  background-color: #625f79;
}

.nav {
  max-width: 1440px;
  margin: 0 auto;
  padding: 1.6rem 0.2rem;
}

@media screen and (min-width: 800px) {
  .nav {
    padding: 1.6rem 1rem;
  }
}

@media screen and (min-width: 1440px) {
  .nav {
    padding: 1.6rem 0;
  }
}

.nav--branding {
  color: #ffffff;
  font-size: 1rem;
  display: inline-block;
  padding: 0.4em 1em;
  line-height: 1.4;
}

.nav--list {
  margin: 0;
  padding: 0;
  list-style-type: none;
  list-style: none;
  vertical-align: middle;
  text-align: center;
  display: block;
  float: right;
}

.nav--list-item {
  margin-left: 2em;
  vertical-align: middle;
  display: block;
  float: left;
}

.nav--list-item a {
  color: #ffffff;
  font-size: 1rem;
  display: inline-block;
  padding: 0.4em 0;
  line-height: 1.4;
}

.nav--list-item a:hover {
  color: #cccccc;
}

.nav--list-item a.btn {
  padding: 0.4em 1em;
}

.nav--list-item a.btn:hover {
  color: #ffffff;
}

.header--description, .contact--info {
  padding: 4rem 0 6rem;
  text-align: center;
}

.header--description h1, .header--description .subhead, .contact--info h1, .contact--info .subhead {
  color: #ffffff;
  margin-bottom: 0.3em;
  padding: 0 0.6rem;
  text-align: center;
}

.header--description .subhead, .header--description p, .contact--info .subhead, .contact--info p {
  font-weight: 300;
  font-size: 1rem;
  line-height: 1.6;
  max-width: 26em;
  margin: 0 auto 2.8rem;
}

.header--description .cta1, .header--description .cta2, .contact--info .cta1, .contact--info .cta2 {
  display: block;
  margin: 0 auto 1rem;
}

@media screen and (min-width: 600px) {
  .header--description .cta1, .contact--info .cta1 {
    display: inline-block;
    margin-right: 0.6em;
  }
  .header--description .cta2, .contact--info .cta2 {
    display: inline-block;
    margin-left: 0.6em;
  }
}

@media screen and (min-width: 800px) {
  .header--description, .contact--info {
    padding: 5rem 0 12rem;
  }
  .header--description .subhead, .header--description p, .contact--info .subhead, .contact--info p {
    font-size: 1.2rem;
  }
}

.contact--info {
  padding: 6rem;
}

.contact--info h2 {
  color: #3f3d4e;
  font-size: 1.8rem;
  font-weight: 400;
  margin: 0.2em auto;
}

.contact--info p {
  color: rgba(98, 95, 121, 0.8);
}

section {
  width: 100%;
  margin: 0;
  padding: 0;
}

section:after {
  content: " ";
  font-size: 0;
  height: 0;
  clear: both;
  display: block;
  visibility: hidden;
}

.section-inner {
  max-width: 1440px;
  margin: 0 auto;
  padding: 0 2rem;
}

.section-inner:after {
  content: " ";
  font-size: 0;
  height: 0;
  clear: both;
  display: block;
  visibility: hidden;
}

@media screen and (min-width: 1460px) {
  .section-inner {
    padding: 0;
  }
}

.header {
  width: 100%;
  background-color: #3f3d4f;
  background-image: url("../images/hero.jpg");
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
}

.services {
  background-color: #f2f1f8;
}

.services--service {
  width: 100%;
  margin: 1rem auto;
  padding: 3.4rem 1.6rem;
  text-align: center;
  float: left;
  position: relative;
  display: block;
  background-color: #ffffff;
  border-radius: 0.4rem;
  z-index: 10;
  -webkit-transform: translateY(-60px);
  -ms-transform: translateY(-60px);
  transform: translateY(-60px);
  box-shadow: 0 40px 100px -20px rgba(63, 61, 79, 0.8);
  -webkit-transition: box-shadow 300ms cubic-bezier(0.45, 0.05, 0.55, 0.95), -webkit-transform 300ms cubic-bezier(0.45, 0.05, 0.55, 0.95);
  transition: box-shadow 300ms cubic-bezier(0.45, 0.05, 0.55, 0.95), -webkit-transform 300ms cubic-bezier(0.45, 0.05, 0.55, 0.95);
  transition: transform 300ms cubic-bezier(0.45, 0.05, 0.55, 0.95), box-shadow 300ms cubic-bezier(0.45, 0.05, 0.55, 0.95);
  transition: transform 300ms cubic-bezier(0.45, 0.05, 0.55, 0.95), box-shadow 300ms cubic-bezier(0.45, 0.05, 0.55, 0.95), -webkit-transform 300ms cubic-bezier(0.45, 0.05, 0.55, 0.95);
}

.services--service h4 {
  margin-bottom: 0.2em;
}

.services--service p {
  color: rgba(63, 61, 78, 0.6);
  margin-bottom: 1.6em;
  font-size: 1rem;
}

.services--service .btn {
  font-size: 0.8rem;
}

.services--service:hover {
  -webkit-transform: translateY(-70px);
  -ms-transform: translateY(-70px);
  transform: translateY(-70px);
  box-shadow: 0 60px 110px -40px rgba(63, 61, 79, 0.8);
}

@media screen and (min-width: 800px) {
  .services--service:hover {
    -webkit-transform: translateY(-100px);
    -ms-transform: translateY(-100px);
    transform: translateY(-100px);
  }
}

@media screen and (min-width: 800px) {
  .services--service {
    width: 30%;
    margin-right: 5%;
    -webkit-transform: translateY(-90px);
    -ms-transform: translateY(-90px);
    transform: translateY(-90px);
  }
  .services--service:nth-child(3n) {
    margin-right: 0;
  }
}

.portfolio {
  background-color: #3f3d4f;
  padding-top: 120px;
}

.portfolio h3 {
  text-align: center;
  color: #ffffff;
}

.portfolio--logos {
  max-width: 1000px;
  margin: 3rem auto 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -ms-flex-direction: row;
  flex-direction: row;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -ms-flex-pack: distribute;
  justify-content: space-around;
}

.portfolio--logos a {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.portfolio--carousel {
  max-width: 1440px;
  height: 100%;
  margin: 0 auto;
}

.portfolio--carousel-selectors {
  max-width: 135px;
  margin: 2rem auto;
}

.portfolio--carousel-selectors:after {
  content: " ";
  font-size: 0;
  height: 0;
  clear: both;
  display: block;
  visibility: hidden;
}

@media screen and (min-width: 600px) {
  .portfolio--carousel-selectors {
    margin: 3rem auto;
  }
}

.portfolio--carousel-selectors .carousel-selector {
  display: block;
  height: 15px;
  width: 15px;
  margin: 0 15px;
  border: 0;
  outline: 0;
  float: left;
  border-radius: 15px;
  background-color: #625f79;
  cursor: pointer;
}

.portfolio--carousel-selectors .carousel-selector.selected {
  background-color: #78c581;
}

.portfolio--carousel-images {
  width: 100%;
  min-height: 150px;
  position: relative;
}

.portfolio--carousel-images img {
  position: absolute;
  display: block;
  top: 100%;
  border-radius: 0.6rem 0.6rem 0 0;
}

.portfolio--carousel-images .carousel-middle {
  width: 250px;
  left: 50%;
  -webkit-transform: translateX(-50%) translateY(-100%);
  -ms-transform: translateX(-50%) translateY(-100%);
  transform: translateX(-50%) translateY(-100%);
  z-index: 10;
}

.portfolio--carousel-images .carousel-left, .portfolio--carousel-images .carousel-right {
  width: 150px;
  -webkit-transform: translateY(-100%);
  -ms-transform: translateY(-100%);
  transform: translateY(-100%);
  z-index: 1;
}

.portfolio--carousel-images .carousel-right {
  right: 0;
}

.portfolio--carousel-images .carousel-left {
  left: 0;
}

@media screen and (min-width: 630px) {
  .portfolio--carousel-images {
    min-height: 250px;
  }
  .portfolio--carousel-images .carousel-middle {
    width: 400px;
  }
  .portfolio--carousel-images .carousel-left, .portfolio--carousel-images .carousel-right {
    width: 250px;
  }
}

@media screen and (min-width: 980px) {
  .portfolio--carousel-images {
    min-height: 500px;
  }
  .portfolio--carousel-images .carousel-middle {
    width: 800px;
  }
  .portfolio--carousel-images .carousel-left, .portfolio--carousel-images .carousel-right {
    width: 600px;
  }
}

.contact {
  background-color: #f2f1f8;
}

/*# sourceMappingURL=data:application/json;base64, */
